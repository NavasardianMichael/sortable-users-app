{"version":3,"sources":["redux/dataReducer.js","redux/rootReducer.js","redux/types.js","redux/actions.js","components/PhoneNumberInput.js","components/Form.js","components/UserItem.js","components/SortButton.js","components/Output.js","App.js","serviceWorker.js","index.js"],"names":["initialState","usersToShow","currentFilter","reversedSort","rootReducer","combineReducers","data","state","action","type","newUser","slice","sort","a","b","toLowerCase","filter","user","id","userId","addNewUserAndSort","dispatch","Date","now","addNewUser","PhoneNumberInput","props","required","name","className","containerClassName","inputClassName","defaultCountry","value","currentUser","phoneNumber","onPhoneNumberChange","isValid","phone","country","test","setCurrentUser","prev","onSelectFlag","input","countryInfo","dialCode","Form","useState","firstName","lastName","email","birthDate","gender","calculateAge","birthday","today","age","getFullYear","m","getMonth","getDate","useEffect","useDispatch","handleChange","event","target","onSubmit","preventDefault","Object","values","includes","htmlFor","placeholder","onChange","max","toISOString","split","checked","UserItem","rowIndex","onClick","window","confirm","src","process","alt","title","style","width","SortButton","filterName","currentTarget","setFilter","filterNameAsText","connect","length","map","index","key","scope","App","Boolean","location","hostname","match","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8a96932c.chunk.js","sourcesContent":["import { ADD_NEW_USER, SET_FILTER, SORT_USERS, REMOVE_USER } from './types';\r\n\r\nconst initialState = {\r\n\tusersToShow: [],\r\n\tcurrentFilter: '',\r\n\treversedSort: false\r\n}\r\n\r\nexport function dataReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_NEW_USER:\r\n\t\t\treturn {...state, usersToShow: [...state.usersToShow, action.newUser]}\r\n\t\tcase SET_FILTER:\r\n\t\t\tvar reversedSort = (state.currentFilter === action.currentFilter) ? !state.reversedSort : false;\r\n\t\t\treturn {...state, currentFilter: action.currentFilter, reversedSort: reversedSort}\r\n\t\tcase SORT_USERS:\r\n\t\t\treturn {...state, usersToShow: state.usersToShow.slice().sort((a, b) => {\r\n\t\t\t\t  if(typeof a[state.currentFilter] === 'string') a[state.currentFilter] = a[state.currentFilter].toLowerCase();\r\n\t\t\t\t  if(typeof b[state.currentFilter] === 'string') b[state.currentFilter] = b[state.currentFilter].toLowerCase();\r\n\t\t\t\t  if(state.reversedSort === false) {\r\n\t\t\t\t  \treturn a[state.currentFilter] < b[state.currentFilter] ? -1 : b[state.currentFilter] > a[state.currentFilter] ? 1 : 0;\r\n\t\t\t\t  }\t else {\r\n\t\t\t\t  \treturn a[state.currentFilter] > b[state.currentFilter] ? -1 : b[state.currentFilter] < a[state.currentFilter] ? 1 : 0;\r\n\t\t\t\t  }\r\n\t\t\t})}\r\n\t\tcase REMOVE_USER:\r\n\t\t\treturn {...state, usersToShow: state.usersToShow.filter(user => user.id !== action.userId)}\r\n\t\tdefault: return state\r\n\t}\r\n};","import { combineReducers } from 'redux';\r\nimport {dataReducer} from './dataReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tdata: dataReducer\r\n})\r\n","export const ADD_NEW_USER = 'DATA/ADD_NEW_USER';\r\nexport const SET_FILTER = 'DATA/SET_FILTER';\r\nexport const SORT_USERS = 'DATA/SORT_USERS';\r\nexport const REMOVE_USER = 'DATA/REMOVE_USER';","import { ADD_NEW_USER, SET_FILTER, SORT_USERS, REMOVE_USER } from './types';\r\n\r\nexport function addNewUser(newUser) {\r\n\tnewUser.id = Date.now();\r\n\treturn {\r\n\t\ttype: ADD_NEW_USER,\r\n\t\tnewUser\r\n\t}\r\n};\r\n\r\nexport function setFilter(currentFilter) {\r\n\treturn {\r\n\t\ttype: SET_FILTER,\r\n\t\tcurrentFilter\r\n\t}\r\n};\r\n\r\nexport function sortUsers() {\r\n\treturn {\r\n\t\ttype: SORT_USERS\r\n\t}\r\n};\r\n\r\nexport function removeUser(userId) {\r\n\treturn {\r\n\t\ttype: REMOVE_USER,\r\n\t\tuserId\r\n\t}\r\n};\r\n\r\nexport function addNewUserAndSort(newUser) {\r\n\treturn function(dispatch) {\r\n\t\tdispatch(addNewUser(newUser));\r\n\t\tdispatch(sortUsers());\r\n\t}\r\n};\r\n\r\nexport function setFilterAndSort(currentFilter) {\r\n\treturn function(dispatch) {\r\n\t\tdispatch(setFilter(currentFilter));\r\n\t\tdispatch(sortUsers());\r\n\t}\r\n};","import React from 'react';\r\nimport IntlTelInput from 'react-intl-tel-input';\r\nimport 'react-intl-tel-input/dist/main.css';\r\n\r\nfunction PhoneNumberInput(props) {\r\n  \r\n\tfunction intTelChangeHandler(isValid, phone, country) {\r\n\t\tif(/[\\D+]/.test(phone)) {\r\n\t\t\treturn false\r\n\t\t} else {\r\n\t\t    props.setCurrentUser(prev => {\r\n\t\t      return {\r\n\t\t        ...prev,\r\n\t\t        phoneNumber: phone\r\n\t\t      }\r\n\t\t    })\r\n\t\t}\r\n\t};\r\n\r\n\tfunction intCountryChangeHandler(input, countryInfo) {\r\n\t    props.setCurrentUser(prev => {\r\n\t      return {\r\n\t        ...prev,\r\n\t        phoneNumber: `+${countryInfo.dialCode} `\r\n\t      }\r\n\t    })\r\n\t};\r\n\r\n\treturn (\r\n\t\t<IntlTelInput \r\n\t\t\trequired \r\n\t\t\ttype=\"tel\" \r\n\t\t\tname=\"phoneNumber\" \r\n\t\t\tclassName=\"form-control\" \r\n\t\t\tcontainerClassName=\"intl-tel-input w-100\" \r\n\t\t\tinputClassName=\"form-control\"\r\n\t\t\tid=\"phoneNumber\" \r\n\t\t\tdefaultCountry=\"am\"\r\n\t\t\tvalue={props.currentUser.phoneNumber} \r\n\t\t\tonPhoneNumberChange={intTelChangeHandler} \r\n\t\t\tonSelectFlag={intCountryChangeHandler}\r\n\t\t/>\r\n\t)\r\n};\r\n\r\nexport default PhoneNumberInput","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNewUserAndSort } from '../redux/actions';\r\nimport PhoneNumberInput from './PhoneNumberInput';\r\n\r\nfunction Form() {\r\n  const [ currentUser, setCurrentUser ] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    birthDate: '',\r\n    phoneNumber: '374',\r\n    gender: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCurrentUser(state => {\r\n      return {\r\n        ...state,\r\n        age: calculateAge(currentUser.birthDate)\r\n      }\r\n    })\r\n  },[currentUser.birthDate]);\r\n\r\n  function calculateAge(birthday) {\r\n      var today = new Date();\r\n      var birthDate = new Date(birthday);\r\n      var age = today.getFullYear() - birthDate.getFullYear();\r\n      var m = today.getMonth() - birthDate.getMonth();\r\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n          age = age - 1;\r\n      }\r\n\r\n      return (age >= 0) ? age : 'birth date isn\\'t valid';\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setCurrentUser(prev => {\r\n      return {\r\n        ...prev,\r\n        [name]: value\r\n      }\r\n    })\r\n  };\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if(!Object.values(currentUser).includes('')) {\r\n      dispatch(addNewUserAndSort(currentUser));\r\n      setCurrentUser({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        birthDate: '',\r\n        phoneNumber: '374',\r\n        gender: ''\r\n      })\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"output my-3\">\r\n      <h2>Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n      <h4 className=\"text-center text-secondary my-4\">Registration form</h4>\r\n      <div className=\"form-row\">\r\n        <div className=\"form-group col-md-6\">\r\n          <label htmlFor=\"firstName\" className=\"text-secondary font-weight-bold\">Name</label>\r\n          <input required type=\"text\" name=\"firstName\" className=\"form-control\" id=\"firstName\" placeholder=\"First\" value={currentUser.firstName} onChange={handleChange} />\r\n        </div>\r\n        <div className=\"form-group col-md-6 mt-auto\">\r\n          <input required type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last\" value={currentUser.lastName} onChange={handleChange} />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"email\" className=\"text-secondary font-weight-bold\">Email</label>\r\n        <input required type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" value={currentUser.email} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"phoneNumber\" className=\"text-secondary font-weight-bold\">Phone number</label>\r\n        <PhoneNumberInput currentUser={currentUser} setCurrentUser={setCurrentUser} />\r\n      </div>     \r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"birthDate\" className=\"text-secondary font-weight-bold\">Birth date</label>\r\n        <input required type=\"date\" name=\"birthDate\" className=\"form-control\" id=\"birthDate\" max={new Date().toISOString().split('T')[0]} value={currentUser.birthDate} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-secondary font-weight-bold\">Gender</label>\r\n        <div className=\"form-check\">\r\n          <input required className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" checked={currentUser.gender === 'male'} onChange={handleChange} />\r\n          <label className=\"form-check-label\" htmlFor=\"male\">\r\n            Male\r\n          </label>\r\n        </div>\r\n        <div className=\"form-check\">\r\n          <input required className=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"female\" value=\"female\" checked={currentUser.gender === 'female'} onChange={handleChange} />\r\n          <label className=\"form-check-label\" htmlFor=\"female\">\r\n            Female\r\n          </label>\r\n        </div>\r\n      </div>                \r\n      <button type=\"submit\" className=\"btn btn-primary w-100\">Submit</button>\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeUser } from '../redux/actions';\r\n\r\nfunction UserItem(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  function removeHandler() {\r\n    var removeConfirmation = window.confirm(`Are you sure you want to remove ${props.user.firstName} ${props.user.lastName} ?`);\r\n    removeConfirmation && dispatch(removeUser(props.user.id));\r\n  };\r\n\r\n  return (\r\n      <tr>\r\n        <td>{props.rowIndex}</td>\r\n        <td>{`${props.user.firstName} ${props.user.lastName}`}</td>\r\n        <td>{props.user.email}</td>\r\n        <td>{props.user.phoneNumber}</td>\r\n        <td>{props.user.age}</td>\r\n        <td>{props.user.gender}</td>\r\n        <td>\r\n          <button type=\"button\" className=\"btn bg-transparent p-0\" onClick={removeHandler}>\r\n            <img src={process.env.PUBLIC_URL + \"/images/removeIcon.png\"} alt=\"remove the user\" title=\"remove the user\" style={{ width: 20 }} />\r\n          </button>\r\n        </td>                                    \r\n      </tr>\r\n  )\r\n}\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setFilterAndSort } from '../redux/actions';\r\n\r\nfunction SortButton(props) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function handleSort(event) {\r\n    dispatch(setFilterAndSort(event.currentTarget.name))\r\n  };\r\n\r\n\treturn (\r\n\t\t<button \r\n            type=\"button\" \r\n            name={props.filterName} \r\n            className=\"filterBtn btn bg-transparent p-0 text-secondary font-weight-bold\" \r\n            onClick={handleSort}>\r\n        \t{props.filterNameAsText}\r\n            {(props.currentFilter === props.filterName) && <img src={props.reversedSort ? process.env.PUBLIC_URL + \"/images/arrowUp.svg\" : process.env.PUBLIC_URL + \"/images/arrowDown.svg\"} alt={`sort button for ${props.filterName}`} title={`sort button for ${props.filterName}`} />}\r\n        </button>\r\n\t)\r\n};\r\n\r\nexport default SortButton","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UserItem from './UserItem';\r\nimport SortButton from './SortButton';\r\n\r\nfunction Output(props) {\r\n  \r\n  if(props.usersToShow.length === 0) {\r\n    return (\r\n      <h4 className=\"my-5 text-danger\">There are no submitted users yet</h4>\r\n    )\r\n  };\r\n\r\n  const usersToShow = props.usersToShow.map((user, index) => <UserItem user={user} rowIndex={index+1} key={user.firstName[0] + user.lastName[0] + user.email[0] + user.phoneNumber[0] + user.gender[0] + user.birthDate} />)\r\n\r\n  return (\r\n    <div className=\"output mt-5\">\r\n        <h2 className=\"my-3\">Output</h2>\r\n        <table className=\"table text-secondary\">\r\n        <thead>\r\n          <tr className=\"bg-light\">\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">\r\n              <SortButton filterNameAsText=\"First Name\" filterName=\"firstName\" currentFilter={props.currentFilter} reversedSort={props.reversedSort} />\r\n            </th>\r\n            <th scope=\"col\">\r\n              <SortButton filterNameAsText=\"Email\" filterName=\"email\" currentFilter={props.currentFilter} reversedSort={props.reversedSort} />\r\n            </th>\r\n            <th scope=\"col\">\r\n              <SortButton filterNameAsText=\"Phone Number\" filterName=\"phoneNumber\" currentFilter={props.currentFilter} reversedSort={props.reversedSort} />\r\n            </th>\r\n            <th scope=\"col\">\r\n              <SortButton filterNameAsText=\"Age\" filterName=\"age\" currentFilter={props.currentFilter} reversedSort={props.reversedSort} />\r\n            </th>\r\n            <th>\r\n              <SortButton filterNameAsText=\"Gender\" filterName=\"gender\" currentFilter={props.currentFilter} reversedSort={props.reversedSort} />\r\n            </th>\r\n            <th scope=\"col\"></th>  \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {usersToShow}      \r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    usersToShow: state.data.usersToShow,\r\n    currentFilter: state.data.currentFilter,\r\n    reversedSort: state.data.reversedSort\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Output);","import React from 'react';\nimport Form from './components/Form';\nimport Output from './components/Output';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <Form />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Output />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './redux/rootReducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nconst app = (\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}